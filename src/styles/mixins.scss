@use "./palette.scss" as *;
@use "sass:math";
@use "sass:color";
@use "sass:string";
@mixin Glow {
    -webkit-box-shadow: 0px 0px 10px 5px #bd93f9;
    box-shadow: 0px 0px 10px 5px #bd93f9;
}

@mixin CastShadow($type: "text", $color: black, $length: 20, $fadeout: true, $skew: true, $direction: left) {
    $shadow: "";

    @if $skew == true or $type == text {
        @if $direction == right {
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i + "px " + $i + "px 0 " + $color + ",";
            }
        }

        @if $direction == left {
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i * -1 + "px " + $i + "px 0 " + $color + ",";
            }
        }
    }

    @if $fadeout ==true {
        @for $i from 1 to $length - 1 {
            @if $type ==text or $skew ==false {
                @if $direction ==right {
                    $shadow: $shadow + $i + "px " + $i + "px 0 " + rgba($color, 1 - $i / $length) + ",";
                }

                @if $direction ==left {
                    $shadow: $shadow + $i * -1 + "px " + $i + "px 0 " + rgba($color, calc(1 - $i / $length)) + ",";
                }
            }

            @if ($type ==box) and $skew ==true {
                @if $direction ==right {
                    $shadow: $shadow + $i + "px " + $i + "px 0 " + $i * 0.2 + "px " + rgba($color, 1 - $i / $length) + ",";
                }

                @if $direction ==left {
                    $shadow: $shadow + $i * -1 + "px " + $i + "px 0 " + $i * 0.2 + "px " + rgba($color, 1 - $i / $length) + ",";
                }
            }
        }

        $shadow: $shadow + $length + "px " + $length + "px 0 " + rgba($color, 0);
    }

    @if $fadeout ==false {
        @if $skew ==true and ($type ==box) {
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i + "px " + $i + "px 0 " + $i * 0.1 + "px " + $color + ",";
            }
        }

        $shadow: $shadow + $length + "px " + $length + "px 0 " + rgba(0, 0, 0, 0);
    }

    $shadow: string.unquote($shadow);

    @if $type == "box" {
        box-shadow: $shadow;
    }

    @if $type == "text" {
        text-shadow: $shadow;
    }
}

@mixin Modal {
    z-index: 9999999999999999;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 100%) scale(0);
    opacity: 0;
    transition: all 0.5s ease-in-out;
    background-color: $background;
    border-radius: 28px;
    box-shadow: 0 48px 20px -20px rgba(0, 0, 0, 0.9);
    min-height: 30vh;
    min-width: 40vw;
    pointer-events: none;
    border: 1px solid $selection;

    &.show {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
        transition: all 0.5s ease-in-out;
        pointer-events: all;
        .modal-content {
            opacity: 1;
            transition: all 0.4s ease;
        }
    }

    /*#region  SCOPED */

    &.node {
        .language-name,
        .icon-wrapper {
            color: #549a48;
        }
        button {
            margin: 10px auto;
            background: #549a48;
        }
        .collapsible {
            overflow-y: scroll;
            mask-image: linear-gradient(to top, transparent 0%, black 20%);
            mask-repeat: no-repeat;
            mask-size: 100% 100%;
            &.open {
                max-height: 200px;
                padding-bottom: 50px;
            }
        }
        ul {
            li {
                color: $foreground;
                line-height: 1.6;
                list-style-type: disc;
                list-style-position: inside;
                font-size: 15px;
            }
        }
    }
    &.react {
        .language-name,
        .icon-wrapper {
            color: #58c4dc;
        }
    }

    &.javascript {
        .language-name,
        .icon-wrapper {
            color: #f7df1e;
        }
    }
    &.html {
        .language-name,
        .icon-wrapper {
            color: #e34c26;
        }
    }
    &.sass {
        .language-name,
        .icon-wrapper {
            color: #cf649a;
        }
    }
    &.csharp {
        .language-name,
        .icon-wrapper {
            color: #68217a;
        }
    }
    &.sql {
        .language-name,
        .icon-wrapper {
            color: #d14d4d;
        }
    }
    &.typescript {
        .language-name,
        .icon-wrapper {
            color: #2775ca;
        }
    }

    /*#endregion  SCOPED */

    .icon-wrapper {
        height: 25px;
        width: 25px;
        margin-left: 10px;
        position: absolute;
        right: 15px;
        top: 15px;
    }

    .modal-content {
        padding: 25px;
        opacity: 0;
        transition: all 0.4s ease;
        position: relative;
        z-index: 9999999999999999;

        .row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid $selection;
            padding: 8px 0;

            .label {
                font-weight: 400;
                color: white;
                font-size: 1em;
            }
        }

        .body {
            color: $foreground;
            font-weight: 300;
        }

        .language-name {
            font-size: 1.7rem;
            font-weight: 600;
            text-align: center;
            margin-bottom: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-bottom: 1px solid $selection;
            padding-bottom: 8px;
            width: max-content;
            margin: 0 auto;
            line-height: 1;
            white-space: nowrap;
        }

        .subtitle {
            font-size: 1.4rem;
            color: $orange;
            margin-bottom: 10px;
        }

        .bubbles {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;

            .bubble {
                background-color: $selection;
                color: $foreground;
                display: flex;
                align-items: center;
                gap: 5px;
                justify-content: center;
                line-height: 1;
                white-space: nowrap;
                font-size: 15px;
                padding: 5px 10px;
                border-radius: 20px;

                &.coffeescript {
                    svg {
                        color: #3e2723;
                        filter: brightness(4);
                    }
                }
                &.lodash {
                    svg {
                        transform: scale(0.8);
                        color: #0177ff;
                        filter: brightness(2);
                    }
                }
                &.react {
                    svg {
                        color: #58c4dc;
                        transform: scale(1.3);
                    }
                }
                &.jquery {
                    svg {
                        color: #0769ad;
                    }
                }
                &.mammoth {
                    svg {
                        color: $purple;
                        transform: scale(1.2);
                    }
                }
            }
        }
    }
}

@mixin MovingBorder {
    &::before {
        content: "";
        position: absolute;
        inset: -2px; /* expands beyond edges */
        background: linear-gradient(270deg, $green, $cyan, $purple, $orange, $yellow);
        background-size: 600% 600%;
        z-index: -1;
        animation: borderGradient 5s linear infinite;
        border-radius: inherit;
    }
    &::after {
        content: "";
        position: absolute;
        inset: 4px; /* thickness of border */
        background: transparent; /* matches container bg */
        border-radius: inherit;
        z-index: 1;
    }
}

@mixin Drops {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    .drop {
        position: absolute;
        border-radius: 50%;
    }
}
@for $i from 1 through 30 {
    @keyframes particle-animation-#{$i} {
        100% {
            transform: translate3d((random(90) * 1vw), (random(90) * 1vh), (random(100) * 1px));
        }
    }

    .drop:nth-child(#{$i}) {
        animation: particle-animation-#{$i} 60s infinite;
        $size: random(5) + 5 + px;
        opacity: random(100) / 100;
        height: $size;
        width: $size;
        animation-delay: -$i * 0.2s;
        transform: translate3d((random(90) * 1vw), (random(90) * 1vh), (random(20) * 1px));
        background: hsl(random(360), 70%, 50%);
    }
}
